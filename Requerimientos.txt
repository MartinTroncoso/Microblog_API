1️⃣ Modelos (Django)
> User (ya lo trae Django con AbstractUser o User)
> Post
   > id (PK)
   > author (FK a User)
   > title (CharField)
   > content (TextField)
   > created_at (DateTimeField)
   > updated_at (DateTimeField)

> Comment
   > id (PK)
   > post (FK a Post)
   > author (FK a User)
   > content (TextField)
   > created_at (DateTimeField)
> Opcional: modelo Like si querés agregar “me gusta” a posts.

2️⃣ Endpoints sugeridos (Django REST Framework)
> Usuarios
    > POST /api/register/ → crear usuario
    > POST /api/login/ → obtener token JWT
    > GET /api/users/<id>/ → ver perfil (solo info pública)

> Posts
    > GET /api/posts/ → lista todos los posts
    > POST /api/posts/ → crear post (autenticación requerida)
    > GET /api/posts/<id>/ → detalle de post
    > PUT /api/posts/<id>/ → editar post (solo autor)
    > DELETE /api/posts/<id>/ → borrar post (solo autor)

> Comentarios
    > GET /api/posts/<id>/comments/ → lista comentarios del post
    > POST /api/posts/<id>/comments/ → crear comentario (autenticación requerida)
    > DELETE /api/comments/<id>/ → borrar comentario (solo autor)
> Opcional: likes
    > POST /api/posts/<id>/like/ → marcar/desmarcar like

3️⃣ Autenticación y permisos
> Usa JWT con djangorestframework-simplejwt.
> Permisos:
    > Solo usuarios autenticados pueden crear posts o comentarios.
    > Solo autor puede editar/borrar sus posts/comentarios.

4️⃣ Extras que suman puntos
> Filtros y búsquedas:
    > Buscar posts por autor o palabra clave.
    > Filtrar posts recientes.
> Paginación: mostrar, por ejemplo, 10 posts por página.
> Pruebas unitarias: testear endpoints con APITestCase.
> Documentación automática: con Swagger / DRF YASG o drf-spectacular.
> Despliegue online: Heroku, Render o Railway para que puedas dar un link directo.